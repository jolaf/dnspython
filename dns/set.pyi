# Copyright (C) Dnspython Contributors, see LICENSE for text of ISC license

from typing import Any, Iterable, Optional

class Set:
    items: Any = ...
    def __init__(self, items: Optional[Any] = ...) -> None: ...
    def add(self, item: Any) -> None: ...
    def remove(self, item: Any) -> None: ...
    def discard(self, item: Any) -> None: ...
    def __copy__(self) -> Set: ...
    def copy(self) -> Set: ...
    def union_update(self, other: Any) -> None: ...
    def intersection_update(self, other: Any) -> None: ...
    def difference_update(self, other: Any) -> None: ...
    def union(self, other: Any) -> Set: ...
    def intersection(self, other: Any) -> Set: ...
    def difference(self, other: Any) -> Set: ...
    def __or__(self, other: Any) -> Set: ...
    def __and__(self, other: Any) -> Set: ...
    def __add__(self, other: Any) -> Set: ...
    def __sub__(self, other: Any) -> Set: ...
    def __ior__(self, other: Any) -> Set: ...
    def __iand__(self, other: Any) -> Set: ...
    def __iadd__(self, other: Any) -> Set: ...
    def __isub__(self, other: Any) -> Set: ...
    def update(self, other: Any) -> None: ...
    def clear(self) -> None: ...
    def __eq__(self, other: Any) -> bool: ...
    def __ne__(self, other: Any) -> bool: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> Iterable[Any]: ...
    def __getitem__(self, i: Any) -> Any: ...
    def __delitem__(self, i: Any) -> None: ...
    def issubset(self, other: Any) -> bool: ...
    def issuperset(self, other: Any) -> bool: ...
